[{"C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\index.js":"1","C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\reportWebVitals.js":"2","C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\App.js":"3","C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\components\\welcome.js":"4","C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\components\\RulesModal.js":"5","C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\components\\Home.js":"6","C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\components\\CreateEventDialog.js":"7","C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\components\\Modal.js":"8"},{"size":646,"mtime":1667957834049,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1667957834057,"results":"11","hashOfConfig":"10"},{"size":384,"mtime":1667957834028,"results":"12","hashOfConfig":"10"},{"size":3743,"mtime":1667957834049,"results":"13","hashOfConfig":"10"},{"size":3354,"mtime":1667957834049,"results":"14","hashOfConfig":"10"},{"size":3305,"mtime":1668012802473,"results":"15","hashOfConfig":"10"},{"size":6412,"mtime":1668012203677,"results":"16","hashOfConfig":"10"},{"size":2599,"mtime":1668012403073,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x6ethy",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\index.js",[],[],"C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\reportWebVitals.js",[],[],"C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\App.js",[],[],"C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\components\\welcome.js",["45","46","47","48","49","50","51","52","53"],[],"import './App.css';\r\nimport React, { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Modal from './Modal'\r\nimport CreateEventDialog  from './CreateEventDialog';\r\nimport RulesModal from './RulesModal';\r\nimport {useNavigate } from 'react-router-dom';\r\n\r\nexport default function Welcome(): React.ReactNode{\r\n    const [clickedDisplayEvents, setClickedDisplayEvents] = useState(false)\r\n    const [events, setEvents] = useState([])\r\n    const [onSignUp, setOnSignUp] = useState(false)\r\n    const [eventState, setEventState] = useState(null)\r\n    const [clickedCreateEvent, setClickedCreateEvent] = useState(false)\r\n    const [checked, setChecked] = useState(false)\r\n    const [logInClicked, setLogInClicked] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n  const navigate = useNavigate()\r\n\r\n    const handleOnClickedDisplayEvents =()=>{\r\n        setClickedDisplayEvents(true)\r\n        // setDisabledDisplayEvents(true)\r\n        getEvents()\r\n     }\r\n     const handleOnClickedCreateEvent=()=>{\r\n\r\n     }\r\n   \r\n    const displayRules = logInClicked ? (<RulesModal setOpenModal={setLogInClicked}  setRedirect = {setRedirect}/>): null\r\n\r\n    // const red = redirect ? (navigate('/home')) : null\r\n    const title = <h1>Welcome to TigerActivities </h1>\r\n    const logInButton = <button disabled={logInClicked} className='button' onClick={()=>{\r\n      setLogInClicked(true)}}>Log In</button>\r\n\r\n\r\n\r\n    const displayEventsButton = <button onClick={handleOnClickedDisplayEvents} disabled={clickedDisplayEvents}> Display Events</button>\r\n    const createEventButton = <button onClick={handleOnClickedCreateEvent} disabled={clickedCreateEvent}>Create Event</button>\r\n    \r\n\r\n\r\n\r\n\r\n      const getEvents =()=> {\r\n        axios({\r\n          method: \"GET\",\r\n          url:\"/events\",\r\n        })\r\n        .then((response) => {\r\n          const res =response.data\r\n          console.log(\"inside get data\")\r\n          setEvents(res)\r\n        }).catch((error) => {\r\n          if (error.response) {\r\n            console.log(error.response)\r\n            console.log(error.response.status)\r\n            console.log(error.response.headers)\r\n            }\r\n        })}\r\n\r\n    const displayEvents = events.map((event)=> (\r\n\r\n          <tr key={event.category+\" \"+ event.id}>\r\n            <td>\r\n              {event.event_name}\r\n            </td>\r\n            <td>\r\n            {event.category}\r\n            </td>\r\n            <td>\r\n              {event.creator}\r\n            </td>\r\n            <td><button onClick={()=>{\r\n                    setOnSignUp(true)\r\n                    setEventState(event)\r\n            }}>Sign Up</button></td>\r\n          </tr>\r\n        )\r\n       \r\n      )\r\n    const showResults = clickedDisplayEvents? (\r\n    <div className=\"center\">\r\n    <table>\r\n      <tbody>\r\n      <tr>\r\n        <td><strong>Event Name</strong></td>\r\n        <td><strong>Category</strong></td>\r\n        <td><strong>Creator</strong></td>\r\n\r\n      </tr>\r\n      {displayEvents}\r\n            \r\n      </tbody>\r\n    </table>\r\n    </div>\r\n\r\n    ): null\r\n\r\nconst modal = onSignUp ? (\r\n  <Modal setOpenModal={setOnSignUp} event={eventState} />\r\n): null\r\n\r\nconst createEventModal = clickedCreateEvent ? ( <CreateEventDialog setOpenModal ={setClickedCreateEvent} />): null\r\n\r\n    return (\r\n      /*\r\n      <div>\r\n    <div className='App'>\r\n   {title}\r\n  \r\n   </div>\r\n   {displayEventsButton}\r\n   {createEventButton}\r\n   {showResults}\r\n   {modal}\r\n   {createEventModal}\r\n   </div>\r\n */\r\n      <div>\r\n      <div className='AppContainer-1'>\r\n        <div className='title'>\r\n          {title}\r\n        </div>\r\n        <div className='logIn'>\r\n          {logInButton}\r\n        </div>\r\n      </div>\r\n      {displayRules}\r\n      </div>\r\n    );\r\n}\r\n","C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\components\\RulesModal.js",[],[],"C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\components\\Home.js",[],[],"C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\components\\CreateEventDialog.js",["54","55"],[],"import React, { useState } from \"react\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"flatpickr/dist/themes/material_orange.css\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction CreateEventDialog(props) {\r\n    const MAX_NO_DAYS = 5\r\n    const DEFAULT_CREATOR = \"DefaultCreator\"\r\n    const DEFAULT_CATEGORY = \"Sports\"\r\n    const DEFAULT_SIGNUP_NR = 0\r\n    const[eventTitle, setEventTitle] = useState('')\r\n    const[eventLocation, setEventLocation] = useState('')\r\n    const[maxAttendeeCount, setMaxAttendeeCount] = useState(5)\r\n    const [disableSubmitForm, setDisableSubmitForm] = useState(false)\r\n    const [startTime, setStartTime] = useState(new Date())\r\n    const [endTime, setEndTime] = useState(new Date())\r\n    const [cost, setCost] = useState(0)\r\n    const [description, setDescription] = useState(\"\")\r\n    const [saving, setSaving] = useState(false)\r\n    const [errorMsg, setErrorMsg] = useState([])\r\n    const [showErrorMsg, setShowErrorMsg] = useState(false)\r\n    // const curr_time = new Date()\r\n    // console.log(\"Current time\", curr_time.getTime())\r\n    // const five_days_in_future = curr_time.setDate(curr_time.getDate() + MAX_NO_DAYS) \r\n    // console.log(\"Max time in future\",five_days_in_future)\r\n   \r\n\r\n    const submitForm = ()=>{\r\n        setDisableSubmitForm(true)\r\n        console.log(disableSubmitForm)\r\n        axios.post('/create-event', {\r\n          // create_id\r\n            event_name:    eventTitle,\r\n            start_time:    startTime,\r\n            end_time:      endTime,\r\n            maxcap:        maxAttendeeCount,\r\n            creator:       DEFAULT_CREATOR,\r\n            category:      DEFAULT_CATEGORY,\r\n            location:      eventLocation,\r\n            description:   description,\r\n            cost:          cost,\r\n            signup_number: DEFAULT_SIGNUP_NR,\r\n\r\n          })\r\n          .then((response) =>{\r\n            console.log(response);\r\n          }, (error) => {\r\n            console.log(error)\r\n          })\r\n    }\r\n\r\n    const failureCallBack = (error)=>{\r\n      setSaving(false)\r\n      setErrorMsg(error)\r\n      setShowErrorMsg(true)\r\n    }\r\n    const successCallBack = ()=>{\r\n      console.log(\"success\")\r\n     setShowErrorMsg(false) \r\n     setErrorMsg(null)\r\n      setSaving(true)\r\n      console.log(eventTitle)\r\n      console.log(description)\r\n      console.log(eventLocation)\r\n      submitForm()\r\n      props.setOpenModal(false)\r\n    }\r\n    const errorM  = showErrorMsg? <strong className=\"error\">{errorMsg}</strong> : null\r\n\r\n  return (\r\n    <div className=\"modalBackground\">\r\n      <div className=\"modalContainer\">\r\n        <div className=\"titleCloseBtn\">\r\n          <button\r\n            onClick={() => {\r\n              props.setOpenModal(false)\r\n            }}\r\n          >\r\n            x\r\n          </button>\r\n        </div>\r\n        <div className=\"title\">\r\n          <h2>Create A TigerActivity </h2>\r\n        </div>\r\n        <div className=\"body\">\r\n\r\n            <form action='/createEvent' method = \"get\">\r\n            <table>\r\n              <tbody>\r\n                    <tr>\r\n                    <td >Title:</td>\r\n                    <td><input type=\"text\" name=\"title\"  value={eventTitle} onChange={(event)=>{\r\n                        setEventTitle(event.target.value)\r\n                        console.log(eventTitle)\r\n                    }}/> </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td >Location:</td>\r\n                    <td><input type=\"text\" name=\"Location\" value ={eventLocation} onChange={(event)=>{\r\n                        setEventLocation(event.target.value)\r\n                    }}/> </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Start Time</td>\r\n                     <td><Flatpickr\r\n                     data-enable-time \r\n                     value={startTime} \r\n                     onChange={(event) => \r\n                     {\r\n                        console.log(\"date:\" +  startTime)\r\n                        setStartTime(new Date(event))\r\n                        console.log(\"date after:\", event)\r\n                     }} /> </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td> End Time</td>\r\n                    <td><Flatpickr\r\n                     data-enable-time \r\n                     value={endTime} \r\n                     onChange={(event) => \r\n                     {\r\n                        setEndTime(new Date(event))\r\n                        console.log(\"date:\", event)\r\n                     }} /> </td>     \r\n                    </tr>\r\n                    <tr>\r\n                    <td >Max Attendee Count:</td>\r\n                    <td><input type=\"text\" name=\"Attendee Count\" value={maxAttendeeCount} onChange={(event) =>\r\n                        {\r\n                            setMaxAttendeeCount(event.target.value)\r\n                        }} /> </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Approximate Cost Involved (in $)</td>\r\n                      <td><input type=\"text\" name=\"Cost\" value={cost} onChange={(event) =>\r\n                        {\r\n                        setCost(event.target.value)\r\n                        }} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Description: </td>\r\n                      <td><textarea name =\"description\" value={description} onChange={(event) =>\r\n                      {\r\n                      setDescription(event.target.value)\r\n                      }}></textarea></td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                </form>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <button\r\n            onClick={() => {\r\n              props.setOpenModal(false);\r\n            }}\r\n            id=\"cancelBtn\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button disabled={disableSubmitForm} onClick={()=>{\r\n            console.log(endTime.getTime())\r\n            console.log(startTime.getTime())\r\n            if( endTime.getTime() < startTime.getTime()){\r\n              console.log(\"wrong dates\")\r\n              failureCallBack(\"End Date before start date. Please fix this\")\r\n            }\r\n            else {\r\n             successCallBack()\r\n            }\r\n\r\n          }}>Create</button>{errorM}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateEventDialog;","C:\\Users\\16097\\Desktop\\Princeton\\Classes\\Senior-Fall\\COS333\\TigerActivities\\reuben-tigerActivities\\flask_react\\src\\components\\Modal.js",["56"],[],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal(props) {\r\n\r\n  const [name,setName] = useState(\"\")\r\n  const [phone,setPhone] = useState(\"\")\r\n  const [email,setEmail] = useState(\"\")\r\n  const [disableSubmitForm, setDisableSubmitForm] = useState(\"\")\r\n\r\n  const submitForm= () =>\r\n  {\r\n    setDisableSubmitForm(true)\r\n    axios.post('/sign-up', {\r\n      name: name,\r\n      phone: phone,\r\n      email: email,\r\n      user_id:\"rand_usr\",\r\n      post_id:\"rand_post\"\r\n    })\r\n    .then((response) => {\r\n      console.log(response)\r\n    }, (error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <div className=\"modalBackground\">\r\n      <div className=\"modalContainer\">\r\n        <div className=\"titleCloseBtn\">\r\n          <button\r\n            onClick={() => {\r\n              {props.setOpenModal(false);}\r\n            }}\r\n          >\r\n            x\r\n          </button>\r\n        </div>\r\n        <div className=\"title\">\r\n          <h2>Want to sign up for</h2>\r\n        </div>\r\n        <div className=\"body\">\r\n  \r\n            <table>\r\n              <tbody>\r\n\r\n            \r\n                    <tr>\r\n                    <td ><label>Name:</label></td>\r\n                    <td><input type=\"text\" name=\"name\" value={name} onChange={(event) =>\r\n                    {\r\n                      setName(event.target.value)\r\n                    }}/> </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td ><label>Phone Number:</label></td>\r\n                    <td><input type=\"text\" name=\"Number\" value={phone} onChange={(event) =>\r\n                    {\r\n                      setPhone(event.target.value)\r\n                    }}/> </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td><label>Email:</label></td>\r\n                    <td><input type=\"text\" name=\"Email\" value={email} onChange={(event) =>\r\n                    {\r\n                      setEmail(event.target.value)\r\n                    }}/></td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n        </div>\r\n        <div className=\"footer\">\r\n          <button\r\n            onClick={() => {\r\n              props.setOpenModal(false);\r\n            }}\r\n            id=\"cancelBtn\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button disabled={disableSubmitForm} onClick={() =>\r\n          {\r\n            submitForm()\r\n            props.setOpenModal(false)\r\n          }}>Sign Up</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;",{"ruleId":"57","severity":1,"message":"58","line":16,"column":12,"nodeType":"59","messageId":"60","endLine":16,"endColumn":19},{"ruleId":"57","severity":1,"message":"61","line":16,"column":21,"nodeType":"59","messageId":"60","endLine":16,"endColumn":31},{"ruleId":"57","severity":1,"message":"62","line":18,"column":12,"nodeType":"59","messageId":"60","endLine":18,"endColumn":20},{"ruleId":"57","severity":1,"message":"63","line":19,"column":9,"nodeType":"59","messageId":"60","endLine":19,"endColumn":17},{"ruleId":"57","severity":1,"message":"64","line":39,"column":11,"nodeType":"59","messageId":"60","endLine":39,"endColumn":30},{"ruleId":"57","severity":1,"message":"65","line":40,"column":11,"nodeType":"59","messageId":"60","endLine":40,"endColumn":28},{"ruleId":"57","severity":1,"message":"66","line":83,"column":11,"nodeType":"59","messageId":"60","endLine":83,"endColumn":22},{"ruleId":"57","severity":1,"message":"67","line":101,"column":7,"nodeType":"59","messageId":"60","endLine":101,"endColumn":12},{"ruleId":"57","severity":1,"message":"68","line":105,"column":7,"nodeType":"59","messageId":"60","endLine":105,"endColumn":23},{"ruleId":"57","severity":1,"message":"69","line":8,"column":11,"nodeType":"59","messageId":"60","endLine":8,"endColumn":22},{"ruleId":"57","severity":1,"message":"70","line":20,"column":12,"nodeType":"59","messageId":"60","endLine":20,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":35,"column":15,"nodeType":"73","messageId":"74","endLine":35,"endColumn":43},"no-unused-vars","'checked' is assigned a value but never used.","Identifier","unusedVar","'setChecked' is assigned a value but never used.","'redirect' is assigned a value but never used.","'navigate' is assigned a value but never used.","'displayEventsButton' is assigned a value but never used.","'createEventButton' is assigned a value but never used.","'showResults' is assigned a value but never used.","'modal' is assigned a value but never used.","'createEventModal' is assigned a value but never used.","'MAX_NO_DAYS' is assigned a value but never used.","'saving' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock"]