[{"/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/index.js":"1","/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/App.js":"2","/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/reportWebVitals.js":"3","/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/components/welcome.js":"4","/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/components/Home.js":"5","/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/components/RulesModal.js":"6","/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/components/Modal.js":"7","/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/components/CreateEventDialog.js":"8"},{"size":626,"mtime":1667962678149,"results":"9","hashOfConfig":"10"},{"size":366,"mtime":1667962678146,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1667962678149,"results":"12","hashOfConfig":"10"},{"size":3610,"mtime":1667962678149,"results":"13","hashOfConfig":"10"},{"size":3131,"mtime":1668006550854,"results":"14","hashOfConfig":"10"},{"size":3229,"mtime":1667962678149,"results":"15","hashOfConfig":"10"},{"size":1271,"mtime":1668003178047,"results":"16","hashOfConfig":"10"},{"size":6231,"mtime":1668003178047,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1t896m3",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"21"},"/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/index.js",[],[],[],"/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/App.js",[],[],"/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/reportWebVitals.js",[],[],"/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/components/welcome.js",["46","47","48","49","50","51","52","53","54"],[],"import './App.css';\nimport React, { useState } from 'react'\nimport axios from 'axios';\n\nimport Modal from './Modal'\nimport CreateEventDialog  from './CreateEventDialog';\nimport RulesModal from './RulesModal';\nimport {useNavigate } from 'react-router-dom';\n\nexport default function Welcome(): React.ReactNode{\n    const [clickedDisplayEvents, setClickedDisplayEvents] = useState(false)\n    const [events, setEvents] = useState([])\n    const [onSignUp, setOnSignUp] = useState(false)\n    const [eventState, setEventState] = useState(null)\n    const [clickedCreateEvent, setClickedCreateEvent] = useState(false)\n    const [checked, setChecked] = useState(false)\n    const [logInClicked, setLogInClicked] = useState(false)\n    const [redirect, setRedirect] = useState(false)\n  const navigate = useNavigate()\n\n    const handleOnClickedDisplayEvents =()=>{\n        setClickedDisplayEvents(true)\n        // setDisabledDisplayEvents(true)\n        getEvents()\n     }\n     const handleOnClickedCreateEvent=()=>{\n\n     }\n   \n    const displayRules = logInClicked ? (<RulesModal setOpenModal={setLogInClicked}  setRedirect = {setRedirect}/>): null\n\n    // const red = redirect ? (navigate('/home')) : null\n    const title = <h1>Welcome to TigerActivities </h1>\n    const logInButton = <button disabled={logInClicked} className='button' onClick={()=>{\n      setLogInClicked(true)}}>Log In</button>\n\n\n\n    const displayEventsButton = <button onClick={handleOnClickedDisplayEvents} disabled={clickedDisplayEvents}> Display Events</button>\n    const createEventButton = <button onClick={handleOnClickedCreateEvent} disabled={clickedCreateEvent}>Create Event</button>\n    \n\n\n\n\n      const getEvents =()=> {\n        axios({\n          method: \"GET\",\n          url:\"/events\",\n        })\n        .then((response) => {\n          const res =response.data\n          console.log(\"inside get data\")\n          setEvents(res)\n        }).catch((error) => {\n          if (error.response) {\n            console.log(error.response)\n            console.log(error.response.status)\n            console.log(error.response.headers)\n            }\n        })}\n\n    const displayEvents = events.map((event)=> (\n\n          <tr key={event.category+\" \"+ event.id}>\n            <td>\n              {event.event_name}\n            </td>\n            <td>\n            {event.category}\n            </td>\n            <td>\n              {event.creator}\n            </td>\n            <td><button onClick={()=>{\n                    setOnSignUp(true)\n                    setEventState(event)\n            }}>Sign Up</button></td>\n          </tr>\n        )\n       \n      )\n    const showResults = clickedDisplayEvents? (\n    <div className=\"center\">\n    <table>\n      <tbody>\n      <tr>\n        <td><strong>Event Name</strong></td>\n        <td><strong>Category</strong></td>\n        <td><strong>Creator</strong></td>\n\n      </tr>\n      {displayEvents}\n            \n      </tbody>\n    </table>\n    </div>\n\n    ): null\n\nconst modal = onSignUp ? (\n  <Modal setOpenModal={setOnSignUp} event={eventState} />\n): null\n\nconst createEventModal = clickedCreateEvent ? ( <CreateEventDialog setOpenModal ={setClickedCreateEvent} />): null\n\n    return (\n      /*\n      <div>\n    <div className='App'>\n   {title}\n  \n   </div>\n   {displayEventsButton}\n   {createEventButton}\n   {showResults}\n   {modal}\n   {createEventModal}\n   </div>\n */\n      <div>\n      <div className='AppContainer-1'>\n        <div className='title'>\n          {title}\n        </div>\n        <div className='logIn'>\n          {logInButton}\n        </div>\n      </div>\n      {displayRules}\n      </div>\n    );\n}\n","/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/components/Home.js",[],[],"/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/components/RulesModal.js",[],[],"/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/components/Modal.js",["55"],[],"import React from \"react\";\nimport \"./Modal.css\";\n\nfunction Modal(props) {\n  return (\n    <div className=\"modalBackground\">\n      <div className=\"modalContainer\">\n        <div className=\"titleCloseBtn\">\n          <button\n            onClick={() => {\n              {props.setOpenModal(false);}\n            }}\n          >\n            x\n          </button>\n        </div>\n        <div className=\"title\">\n          <h2>Want to sign up for</h2>\n        </div>\n        <div className=\"body\">\n  \n            <table>\n              <tbody>\n\n            \n                    <tr>\n                    <td ><label>Name:</label></td>\n                    <td><input type=\"text\" name=\"name\"/> </td>\n                    </tr>\n                    <tr>\n                    <td ><label>Phone Number:</label></td>\n                    <td><input type=\"text\" name=\"Number\"/> </td>\n                    </tr>\n                    </tbody>\n                </table>\n\n        </div>\n        <div className=\"footer\">\n          <button\n            onClick={() => {\n              props.setOpenModal(false);\n            }}\n            id=\"cancelBtn\"\n          >\n            Cancel\n          </button>\n          <button>Sign Up</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;","/Users/nadaelfazary/COS333_Project/TigerActivities/reuben-tigerActivities/flask_react/src/components/CreateEventDialog.js",["56","57","58"],[],"import React, { useState } from \"react\";\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/material_orange.css\";\nimport axios from 'axios';\n\n\nfunction CreateEventDialog(props) {\n    const MAX_NO_DAYS = 5\n    const DEFAULT_CREATOR = \"DefaultCreator\"\n    const DEFAULT_CATEGORY = \"Sports\"\n    const DEFAULT_SIGNUP_NR = 0\n    const[eventTitle, setEventTitle] = useState('')\n    const[eventLocation, setEventLocation] = useState('')\n    const[maxAttendeeCount, setMaxAttendeeCount] = useState(5)\n    const [disableSubmitForm, setDisableSubmitForm] = useState(false)\n    const [startTime, setStartTime] = useState(new Date())\n    const [endTime, setEndTime] = useState(new Date())\n    const [cost, setCost] = useState(0)\n    const [description, setDescription] = useState(\"\")\n    const [saving, setSaving] = useState(false)\n    const [errorMsg, setErrorMsg] = useState([])\n    const [showErrorMsg, setShowErrorMsg] = useState(false)\n    const curr_time = new Date()\n    // console.log(\"Current time\", curr_time.getTime())\n    // const five_days_in_future = curr_time.setDate(curr_time.getDate() + MAX_NO_DAYS) \n    // console.log(\"Max time in future\",five_days_in_future)\n   \n\n    const submitForm = ()=>{\n        setDisableSubmitForm(true)\n        console.log(disableSubmitForm)\n        axios.post('/create-event', {\n          // create_id\n            event_name:    eventTitle,\n            start_time:    startTime,\n            end_time:      endTime,\n            maxcap:        maxAttendeeCount,\n            creator:       DEFAULT_CREATOR,\n            category:      DEFAULT_CATEGORY,\n            location:      eventLocation,\n            description:   description,\n            cost:          cost,\n            signup_number: DEFAULT_SIGNUP_NR,\n\n          })\n          .then((response) =>{\n            console.log(response);\n          }, (error) => {\n            console.log(error)\n          })\n    }\n\n    const failureCallBack = (error)=>{\n      setSaving(false)\n      setErrorMsg(error)\n      setShowErrorMsg(true)\n    }\n    const successCallBack = ()=>{\n      console.log(\"success\")\n     setShowErrorMsg(false) \n     setErrorMsg(null)\n      setSaving(true)\n      console.log(eventTitle)\n      console.log(description)\n      console.log(eventLocation)\n      submitForm()\n      props.setOpenModal(false)\n    }\n    const errorM  = showErrorMsg? <strong className=\"error\">{errorMsg}</strong> : null\n\n  return (\n    <div className=\"modalBackground\">\n      <div className=\"modalContainer\">\n        <div className=\"titleCloseBtn\">\n          <button\n            onClick={() => {\n              props.setOpenModal(false)\n            }}\n          >\n            x\n          </button>\n        </div>\n        <div className=\"title\">\n          <h2>Create A TigerActivity </h2>\n        </div>\n        <div className=\"body\">\n\n            <form action='/createEvent' method = \"get\">\n            <table>\n              <tbody>\n                    <tr>\n                    <td >Title:</td>\n                    <td><input type=\"text\" name=\"title\"  value={eventTitle} onChange={(event)=>{\n                        setEventTitle(event.target.value)\n                        console.log(eventTitle)\n                    }}/> </td>\n                    </tr>\n                    <tr>\n                    <td >Location:</td>\n                    <td><input type=\"text\" name=\"Location\" value ={eventLocation} onChange={(event)=>{\n                        setEventLocation(event.target.value)\n                    }}/> </td>\n                    </tr>\n                    <tr>\n                      <td>Start Time</td>\n                     <td><Flatpickr\n                     data-enable-time \n                     value={startTime} \n                     onChange={(event) => \n                     {\n                        console.log(\"date:\" +  startTime)\n                        setStartTime(new Date(event))\n                        console.log(\"date after:\", event)\n                     }} /> </td>\n                    </tr>\n                    <tr>\n                    <td> End Time</td>\n                    <td><Flatpickr\n                     data-enable-time \n                     value={endTime} \n                     onChange={(event) => \n                     {\n                        setEndTime(new Date(event))\n                        console.log(\"date:\", event)\n                     }} /> </td>     \n                    </tr>\n                    <tr>\n                    <td >Max Attendee Count:</td>\n                    <td><input type=\"text\" name=\"Attendee Count\" value={maxAttendeeCount} onChange={(event) =>\n                        {\n                            setMaxAttendeeCount(event.target.value)\n                        }} /> </td>\n                    </tr>\n                    <tr>\n                      <td>Approximate Cost Involved (in $)</td>\n                      <td><input type=\"text\" name=\"Cost\" value={cost} onChange={(event) =>\n                        {\n                        setCost(event.target.value)\n                        }} /></td>\n                    </tr>\n                    <tr>\n                      <td>Description: </td>\n                      <td><textarea name =\"description\" value={description} onChange={(event) =>\n                      {\n                      setDescription(event.target.value)\n                      }}></textarea></td>\n                    </tr>\n                    </tbody>\n                </table>\n                </form>\n        </div>\n        <div className=\"footer\">\n          <button\n            onClick={() => {\n              props.setOpenModal(false);\n            }}\n            id=\"cancelBtn\"\n          >\n            Cancel\n          </button>\n          <button disabled={disableSubmitForm} onClick={()=>{\n            console.log(endTime.getTime())\n            console.log(startTime.getTime())\n            if( endTime.getTime() < startTime.getTime()){\n              console.log(\"wrong dates\")\n              failureCallBack(\"End Date before start date. Please fix this\")\n            }\n            else {\n             successCallBack()\n            }\n\n          }}>Create</button>{errorM}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateEventDialog;",{"ruleId":"59","severity":1,"message":"60","line":16,"column":12,"nodeType":"61","messageId":"62","endLine":16,"endColumn":19},{"ruleId":"59","severity":1,"message":"63","line":16,"column":21,"nodeType":"61","messageId":"62","endLine":16,"endColumn":31},{"ruleId":"59","severity":1,"message":"64","line":18,"column":12,"nodeType":"61","messageId":"62","endLine":18,"endColumn":20},{"ruleId":"59","severity":1,"message":"65","line":19,"column":9,"nodeType":"61","messageId":"62","endLine":19,"endColumn":17},{"ruleId":"59","severity":1,"message":"66","line":39,"column":11,"nodeType":"61","messageId":"62","endLine":39,"endColumn":30},{"ruleId":"59","severity":1,"message":"67","line":40,"column":11,"nodeType":"61","messageId":"62","endLine":40,"endColumn":28},{"ruleId":"59","severity":1,"message":"68","line":83,"column":11,"nodeType":"61","messageId":"62","endLine":83,"endColumn":22},{"ruleId":"59","severity":1,"message":"69","line":101,"column":7,"nodeType":"61","messageId":"62","endLine":101,"endColumn":12},{"ruleId":"59","severity":1,"message":"70","line":105,"column":7,"nodeType":"61","messageId":"62","endLine":105,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":11,"column":15,"nodeType":"73","messageId":"74","endLine":11,"endColumn":43},{"ruleId":"59","severity":1,"message":"75","line":8,"column":11,"nodeType":"61","messageId":"62","endLine":8,"endColumn":22},{"ruleId":"59","severity":1,"message":"76","line":20,"column":12,"nodeType":"61","messageId":"62","endLine":20,"endColumn":18},{"ruleId":"59","severity":1,"message":"77","line":23,"column":11,"nodeType":"61","messageId":"62","endLine":23,"endColumn":20},"no-unused-vars","'checked' is assigned a value but never used.","Identifier","unusedVar","'setChecked' is assigned a value but never used.","'redirect' is assigned a value but never used.","'navigate' is assigned a value but never used.","'displayEventsButton' is assigned a value but never used.","'createEventButton' is assigned a value but never used.","'showResults' is assigned a value but never used.","'modal' is assigned a value but never used.","'createEventModal' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'MAX_NO_DAYS' is assigned a value but never used.","'saving' is assigned a value but never used.","'curr_time' is assigned a value but never used."]